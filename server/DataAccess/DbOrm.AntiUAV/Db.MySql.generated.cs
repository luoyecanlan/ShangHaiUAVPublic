//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

#pragma warning disable 1591

using System;
using System.Collections.Generic;
using System.Linq;

using LinqToDB;
using LinqToDB.Mapping;

namespace AntiUAV.DB
{
	/// <summary>
	/// Database       : antiuav
	/// Data Source    : 47.92.200.192
	/// Server Version : 5.7.17-log
	/// </summary>
	public partial class AntiuavDB : LinqToDB.Data.DataConnection
	{
		public ITable<Device>                 Devices                 { get { return this.GetTable<Device>(); } }
		public ITable<DeviceZone>             DeviceZones             { get { return this.GetTable<DeviceZone>(); } }
		/// <summary>
		/// 常量词典数据，增加设备需要来此增加
		/// </summary>
		public ITable<DicDeviceCategory>      DicDeviceCategories     { get { return this.GetTable<DicDeviceCategory>(); } }
		public ITable<DicMapConfig>           DicMapConfigs           { get { return this.GetTable<DicMapConfig>(); } }
		public ITable<DicSysConfig>           DicSysConfigs           { get { return this.GetTable<DicSysConfig>(); } }
		public ITable<Target>                 Targets                 { get { return this.GetTable<Target>(); } }
		public ITable<TargetTurn>             TargetTurns             { get { return this.GetTable<TargetTurn>(); } }
		public ITable<Token>                  Tokens                  { get { return this.GetTable<Token>(); } }
		public ITable<Track>                  Tracks                  { get { return this.GetTable<Track>(); } }
		public ITable<Uavmodel>               Uavmodels               { get { return this.GetTable<Uavmodel>(); } }
		public ITable<User>                   Users                   { get { return this.GetTable<User>(); } }
		/// <summary>
		/// 用户数据个性化管理--吴瑞良设计
		/// </summary>
		public ITable<UserCmsPersonalization> UserCmsPersonalizations { get { return this.GetTable<UserCmsPersonalization>(); } }
		public ITable<UserDevice>             UserDevices             { get { return this.GetTable<UserDevice>(); } }
		public ITable<Whitelist>              Whitelists              { get { return this.GetTable<Whitelist>(); } }
		public ITable<Zone>                   Zones                   { get { return this.GetTable<Zone>(); } }

		public AntiuavDB()
		{
			InitDataContext();
			InitMappingSchema();
		}

		public AntiuavDB(string configuration)
			: base(configuration)
		{
			InitDataContext();
			InitMappingSchema();
		}

		partial void InitDataContext  ();
		partial void InitMappingSchema();
	}

	[Table("device")]
	public partial class Device
	{
		/// <summary>
		/// 设备唯一ID
		/// </summary>
		[Column("id"),                      PrimaryKey,  Identity] public int      Id                      { get; set; } // int(11)
		/// <summary>
		/// 设备名称
		/// </summary>
		[Column("name"),                    NotNull              ] public string   Name                    { get; set; } // varchar(255)
		/// <summary>
		/// 设备描述
		/// </summary>
		[Column("display"),                    Nullable          ] public string   Display                 { get; set; } // varchar(500)
		/// <summary>
		/// 设备类型
		/// </summary>
		[Column("category"),                NotNull              ] public int      Category                { get; set; } // int(11)
		/// <summary>
		/// 设备纬度
		/// </summary>
		[Column("lat"),                     NotNull              ] public double   Lat                     { get; set; } // double
		/// <summary>
		/// 设备经度
		/// </summary>
		[Column("lng"),                     NotNull              ] public double   Lng                     { get; set; } // double
		/// <summary>
		/// 设备海拔
		/// </summary>
		[Column("alt"),                     NotNull              ] public double   Alt                     { get; set; } // double
		/// <summary>
		/// 覆盖范围半径
		/// </summary>
		[Column("coverR"),                  NotNull              ] public double   CoverR                  { get; set; } // double
		/// <summary>
		/// 覆盖范围起始角
		/// </summary>
		[Column("coverS"),                  NotNull              ] public double   CoverS                  { get; set; } // double
		/// <summary>
		/// 覆盖范围结束角
		/// </summary>
		[Column("coverE"),                  NotNull              ] public double   CoverE                  { get; set; } // double
		/// <summary>
		/// 水平纠偏角
		/// </summary>
		[Column("rectifyAz"),               NotNull              ] public double   RectifyAz               { get; set; } // double
		/// <summary>
		/// 俯仰纠偏角
		/// </summary>
		[Column("rectifyEl"),               NotNull              ] public double   RectifyEl               { get; set; } // double
		/// <summary>
		/// 威胁判定点数量
		/// </summary>
		[Column("threadAssessmentCount"),   NotNull              ] public int      ThreadAssessmentCount   { get; set; } // int(11)
		/// <summary>
		/// 目标超时时间（s）
		/// </summary>
		[Column("targetTimeOut"),           NotNull              ] public int      TargetTimeOut           { get; set; } // int(11)
		/// <summary>
		/// 状态上报间隔（s）
		/// </summary>
		[Column("statusReportingInterval"), NotNull              ] public int      StatusReportingInterval { get; set; } // int(11)
		/// <summary>
		/// 航迹上报间隔（s）
		/// </summary>
		[Column("probeReportingInterval"),  NotNull              ] public int      ProbeReportingInterval  { get; set; } // int(255)
		/// <summary>
		/// 设备IP
		/// </summary>
		[Column("ip"),                      NotNull              ] public string   Ip                      { get; set; } // varchar(255)
		/// <summary>
		/// 设备端口号
		/// </summary>
		[Column("port"),                    NotNull              ] public int      Port                    { get; set; } // int(11)
		/// <summary>
		/// 设备服务IP
		/// </summary>
		[Column("lip"),                     NotNull              ] public string   Lip                     { get; set; } // varchar(255)
		/// <summary>
		/// 设备服务监听端口
		/// </summary>
		[Column("lport"),                   NotNull              ] public int      Lport                   { get; set; } // int(11)
		/// <summary>
		/// 设备创建时间
		/// </summary>
		[Column("createtime"),              NotNull              ] public DateTime Createtime              { get; set; } // datetime
		/// <summary>
		/// 设备更新时间
		/// </summary>
		[Column("updatetime"),              NotNull              ] public DateTime Updatetime              { get; set; } // datetime

		#region Associations

		/// <summary>
		/// device_dz_FK_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="DeviceId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<DeviceZone> DzFks { get; set; }

		/// <summary>
		/// device_td_FK_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="DeviceId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Track> TdFks { get; set; }

		/// <summary>
		/// device_ud_FK_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="Deviceid", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<UserDevice> UdFks { get; set; }

		#endregion
	}

	[Table("device_zone")]
	public partial class DeviceZone
	{
		/// <summary>
		/// 设备与预警区关联唯一ID（已弃用）
		/// </summary>
		[Column("id"),       PrimaryKey, Identity] public int Id       { get; set; } // int(11)
		/// <summary>
		/// 设备ID
		/// </summary>
		[Column("deviceId"), NotNull             ] public int DeviceId { get; set; } // int(11)
		/// <summary>
		/// 预警区ID
		/// </summary>
		[Column("zoneId"),   NotNull             ] public int ZoneId   { get; set; } // int(11)

		#region Associations

		/// <summary>
		/// device_dz_FK
		/// </summary>
		[Association(ThisKey="DeviceId", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="device_dz_FK", BackReferenceName="DzFks")]
		public Device Device { get; set; }

		/// <summary>
		/// zone_dz_FK
		/// </summary>
		[Association(ThisKey="ZoneId", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="zone_dz_FK", BackReferenceName="DzFks")]
		public Zone Zone { get; set; }

		#endregion
	}

	/// <summary>
	/// 常量词典数据，增加设备需要来此增加
	/// </summary>
	[Table("dic_device_category")]
	public partial class DicDeviceCategory
	{
		/// <summary>
		/// 设备分类唯一ID
		/// </summary>
		[Column("id"), PrimaryKey, NotNull] public int    Id   { get; set; } // int(11)
		/// <summary>
		/// 设备分类名称
		/// </summary>
		[Column(),                 NotNull] public string Name { get; set; } // varchar(255)
	}

	[Table("dic_map_config")]
	public partial class DicMapConfig
	{
		/// <summary>
		/// 地图配置信息
		/// </summary>
		[Column("id"),               PrimaryKey,  Identity] public int    Id             { get; set; } // int(11)
		/// <summary>
		/// 地图配置信息名称
		/// </summary>
		[Column("name"),             NotNull              ] public string Name           { get; set; } // varchar(255)
		/// <summary>
		/// 地图配置信息URL地址
		/// </summary>
		[Column("url"),              NotNull              ] public string Url            { get; set; } // varchar(500)
		/// <summary>
		/// 最大缩放
		/// </summary>
		[Column("zoom_max"),         NotNull              ] public int    ZoomMax        { get; set; } // int(11)
		/// <summary>
		/// 最小缩放
		/// </summary>
		[Column("zoom_min"),         NotNull              ] public int    ZoomMin        { get; set; } // int(11)
		/// <summary>
		/// 默认（初始）缩放
		/// </summary>
		[Column("zoom_default"),     NotNull              ] public int    ZoomDefault    { get; set; } // int(11)
		/// <summary>
		/// 边界最大纬度
		/// </summary>
		[Column("boundary_max_lat"), NotNull              ] public double BoundaryMaxLat { get; set; } // double
		/// <summary>
		/// 边界最大经度
		/// </summary>
		[Column("boundary_max_lng"), NotNull              ] public double BoundaryMaxLng { get; set; } // double
		/// <summary>
		/// 边界最小纬度
		/// </summary>
		[Column("boundary_min_lat"), NotNull              ] public double BoundaryMinLat { get; set; } // double
		/// <summary>
		/// 边界最大经度
		/// </summary>
		[Column("boundary_min_lng"), NotNull              ] public double BoundaryMinLng { get; set; } // double
		/// <summary>
		/// 备注信息
		/// </summary>
		[Column("remark"),              Nullable          ] public string Remark         { get; set; } // varchar(255)

		#region Associations

		/// <summary>
		/// m_m_FK_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="MapId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<UserCmsPersonalization> MmFks { get; set; }

		#endregion
	}

	[Table("dic_sys_config")]
	public partial class DicSysConfig
	{
		/// <summary>
		/// 系统通用配置信息唯一ID
		/// </summary>
		[Column("id"),   PrimaryKey, Identity] public int    Id   { get; set; } // int(11)
		/// <summary>
		/// 系统通用配置信息配置项名称
		/// </summary>
		[Column("name"), NotNull             ] public string Name { get; set; } // varchar(255)
		/// <summary>
		/// 系统通用配置信息配置项数据
		/// </summary>
		[Column("info"), NotNull             ] public string Info { get; set; } // varchar(5000)
	}

	[Table("target")]
	public partial class Target
	{
		/// <summary>
		/// 目标唯一ID
		/// </summary>
		[Column("id"),                 PrimaryKey(1), Identity] public int      Id                 { get; set; } // int(11)
		/// <summary>
		/// 系统内目标ID
		/// </summary>
		[Column(),                     PrimaryKey(2), NotNull ] public string   TgId               { get; set; } // varchar(255)
		/// <summary>
		/// 唯一SN码（若有则写入）
		/// </summary>
		[Column("sn"),                    Nullable            ] public string   Sn                 { get; set; } // varchar(255)
		/// <summary>
		/// 无人机类型（-1为未知类型）
		/// </summary>
		[Column("uavmodel"),              Nullable            ] public int?     Uavmodel           { get; set; } // int(11)
		/// <summary>
		/// 目标类型
		/// </summary>
		[Column("category"),                          NotNull ] public int      Category           { get; set; } // int(11)
		/// <summary>
		/// 目标类型出现概率
		/// </summary>
		[Column("categoryProportion"),                NotNull ] public double   CategoryProportion { get; set; } // double(1,0)
		/// <summary>
		/// 飞手位置
		/// </summary>
		[Column("flyer"),                 Nullable            ] public string   Flyer              { get; set; } // varchar(1000)
		/// <summary>
		/// 来源设备数量
		/// </summary>
		[Column("deviceCount"),                       NotNull ] public int      DeviceCount        { get; set; } // int(11)
		/// <summary>
		/// 点迹数
		/// </summary>
		[Column("count"),                             NotNull ] public int      Count              { get; set; } // int(11)
		/// <summary>
		/// 开始时间
		/// </summary>
		[Column("starttime"),                         NotNull ] public DateTime Starttime          { get; set; } // datetime
		/// <summary>
		/// 结束时间
		/// </summary>
		[Column("endtime"),                           NotNull ] public DateTime Endtime            { get; set; } // datetime
		/// <summary>
		/// 威胁度
		/// </summary>
		[Column("threat"),                            NotNull ] public double   Threat             { get; set; } // double
		/// <summary>
		/// 目标记录创建时间
		/// </summary>
		[Column("createtime"),                        NotNull ] public DateTime Createtime         { get; set; } // datetime

		#region Associations

		/// <summary>
		/// target_tt_FK_BackReference
		/// </summary>
		[Association(ThisKey="TgId", OtherKey="TargetId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Track> TtFks { get; set; }

		#endregion
	}

	[Table("target_turn")]
	public partial class TargetTurn
	{
		/// <summary>
		/// 默认转发地址唯一ID
		/// </summary>
		[Column("id"),     PrimaryKey, Identity] public int    Id     { get; set; } // int(11)
		/// <summary>
		/// 默认转发地址IP
		/// </summary>
		[Column("ip"),     NotNull             ] public string Ip     { get; set; } // varchar(255)
		/// <summary>
		/// 默认转发地址端口号
		/// </summary>
		[Column("port"),   NotNull             ] public int    Port   { get; set; } // int(11)
		/// <summary>
		/// 默认转发地址备注信息
		/// </summary>
		[Column("remark"), NotNull             ] public string Remark { get; set; } // varchar(255)
	}

	[Table("token")]
	public partial class Token
	{
		[Column("id"),         PrimaryKey, Identity] public int      Id         { get; set; } // int(11)
		[Column("userId"),     NotNull             ] public int      UserId     { get; set; } // int(11)
		[Column("access"),     NotNull             ] public string   Access     { get; set; } // varchar(500)
		[Column("refresh"),    NotNull             ] public string   Refresh    { get; set; } // varchar(255)
		[Column("expire"),     NotNull             ] public int      Expire     { get; set; } // int(1)
		[Column("nbf"),        NotNull             ] public DateTime Nbf        { get; set; } // datetime
		[Column("exp"),        NotNull             ] public DateTime Exp        { get; set; } // datetime
		/// <summary>
		/// 失效标记 0-未失效 1-强制失效 2-刷新失效 3-自然失效
		/// </summary>
		[Column(),             NotNull             ] public int      Invalid    { get; set; } // int(1)
		[Column("creattime"),  NotNull             ] public DateTime Creattime  { get; set; } // datetime
		[Column("updatetime"), NotNull             ] public DateTime Updatetime { get; set; } // datetime
	}

	[Table("track")]
	public partial class Track
	{
		/// <summary>
		/// 航迹点唯一ID
		/// </summary>
		[Column("id"),        PrimaryKey, Identity] public int      Id        { get; set; } // int(11)
		/// <summary>
		/// 目标ID
		/// </summary>
		[Column("targetId"),  NotNull             ] public string   TargetId  { get; set; } // varchar(255)
		/// <summary>
		/// 设备ID
		/// </summary>
		[Column("deviceId"),  NotNull             ] public int      DeviceId  { get; set; } // int(11)
		/// <summary>
		/// 目标点纬度
		/// </summary>
		[Column("lat"),       NotNull             ] public double   Lat       { get; set; } // double
		/// <summary>
		/// 目标点经度
		/// </summary>
		[Column("lng"),       NotNull             ] public double   Lng       { get; set; } // double
		/// <summary>
		/// 目标点海拔
		/// </summary>
		[Column("alt"),       NotNull             ] public double   Alt       { get; set; } // double
		/// <summary>
		/// 目标类型
		/// </summary>
		[Column("category"),  NotNull             ] public int      Category  { get; set; } // int(11)
		/// <summary>
		/// 航迹点航迹模式
		/// </summary>
		[Column("mode"),      NotNull             ] public int      Mode      { get; set; } // int(11)
		/// <summary>
		/// 威胁度
		/// </summary>
		[Column("threat"),    NotNull             ] public double   Threat    { get; set; } // double
		/// <summary>
		/// 航迹点时间
		/// </summary>
		[Column("tracktime"), NotNull             ] public DateTime Tracktime { get; set; } // datetime

		#region Associations

		/// <summary>
		/// device_td_FK
		/// </summary>
		[Association(ThisKey="DeviceId", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="device_td_FK", BackReferenceName="TdFks")]
		public Device Device { get; set; }

		/// <summary>
		/// target_tt_FK
		/// </summary>
		[Association(ThisKey="TargetId", OtherKey="TgId", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="target_tt_FK", BackReferenceName="TtFks")]
		public Target Target { get; set; }

		#endregion
	}

	[Table("uavmodel")]
	public partial class Uavmodel
	{
		[Column("id"),         PrimaryKey, Identity] public int      Id         { get; set; } // int(11)
		/// <summary>
		/// 无人机类型名称
		/// </summary>
		[Column("name"),       NotNull             ] public string   Name       { get; set; } // varchar(255)
		[Column("createtime"), NotNull             ] public DateTime Createtime { get; set; } // datetime
		[Column("updatetime"), NotNull             ] public DateTime Updatetime { get; set; } // datetime
	}

	[Table("user")]
	public partial class User
	{
		/// <summary>
		/// 用户唯一ID
		/// </summary>
		[Column("id"),         PrimaryKey,  Identity] public int      Id         { get; set; } // int(11)
		/// <summary>
		/// 用户姓名
		/// </summary>
		[Column("name"),       NotNull              ] public string   Name       { get; set; } // varchar(255)
		/// <summary>
		/// 用户名
		/// </summary>
		[Column("username"),   NotNull              ] public string   Username   { get; set; } // varchar(255)
		/// <summary>
		/// 密码
		/// </summary>
		[Column("password"),   NotNull              ] public string   Password   { get; set; } // varchar(255)
		/// <summary>
		/// 昵称
		/// </summary>
		[Column("nick"),          Nullable          ] public string   Nick       { get; set; } // varchar(255)
		/// <summary>
		/// 电话
		/// </summary>
		[Column("phone"),         Nullable          ] public string   Phone      { get; set; } // varchar(255)
		/// <summary>
		/// 邮件
		/// </summary>
		[Column("email"),         Nullable          ] public string   Email      { get; set; } // varchar(255)
		/// <summary>
		/// 用户角色 默认普通用户
		/// </summary>
		[Column("role"),       NotNull              ] public string   Role       { get; set; } // varchar(255)
		/// <summary>
		/// 用户创建时间
		/// </summary>
		[Column("createtime"), NotNull              ] public DateTime Createtime { get; set; } // datetime
		/// <summary>
		/// 用户更新时间
		/// </summary>
		[Column("updatetime"), NotNull              ] public DateTime Updatetime { get; set; } // datetime

		#region Associations

		/// <summary>
		/// user_ud_FK_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="Userid", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<UserDevice> UdFks { get; set; }

		/// <summary>
		/// u_up_FK_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="UserId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<UserCmsPersonalization> UupFks { get; set; }

		#endregion
	}

	/// <summary>
	/// 用户数据个性化管理--吴瑞良设计
	/// </summary>
	[Table("user_cms_personalization")]
	public partial class UserCmsPersonalization
	{
		[Column("id"),              PrimaryKey, Identity] public int      Id             { get; set; } // int(11)
		[Column("user_id"),         NotNull             ] public int      UserId         { get; set; } // int(11)
		[Column("map_id"),          NotNull             ] public int      MapId          { get; set; } // int(11)
		[Column("device_cover"),    NotNull             ] public string   DeviceCover    { get; set; } // varchar(1000)
		[Column("device_line"),     NotNull             ] public string   DeviceLine     { get; set; } // varchar(1000)
		[Column("filter_v_min"),    NotNull             ] public int      FilterVMin     { get; set; } // int(11)
		[Column("filter_v_max"),    NotNull             ] public int      FilterVMax     { get; set; } // int(11)
		[Column("filter_disc_min"), NotNull             ] public int      FilterDiscMin  { get; set; } // int(11)
		[Column("filter_disc_max"), NotNull             ] public int      FilterDiscMax  { get; set; } // int(11)
		[Column("filter_alt_min"),  NotNull             ] public int      FilterAltMin   { get; set; } // int(11)
		[Column("filter_alt_max"),  NotNull             ] public int      FilterAltMax   { get; set; } // int(11)
		[Column("filter_threat"),   NotNull             ] public string   FilterThreat   { get; set; } // varchar(1000)
		[Column("filter_category"), NotNull             ] public string   FilterCategory { get; set; } // varchar(1000)
		[Column("other"),           NotNull             ] public string   Other          { get; set; } // varchar(2000)
		[Column("updatetime"),      NotNull             ] public DateTime Updatetime     { get; set; } // datetime

		#region Associations

		/// <summary>
		/// m_m_FK
		/// </summary>
		[Association(ThisKey="MapId", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="m_m_FK", BackReferenceName="MmFks")]
		public DicMapConfig Map { get; set; }

		/// <summary>
		/// u_up_FK
		/// </summary>
		[Association(ThisKey="UserId", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="u_up_FK", BackReferenceName="UupFks")]
		public User User { get; set; }

		#endregion
	}

	[Table("user_device")]
	public partial class UserDevice
	{
		/// <summary>
		/// 用户与设备多对多关系ID(目前弃用）
		/// </summary>
		[Column("id"),       PrimaryKey, Identity] public int Id       { get; set; } // int(11)
		/// <summary>
		/// 用户关联ID
		/// </summary>
		[Column("userid"),   NotNull             ] public int Userid   { get; set; } // int(11)
		/// <summary>
		/// 设备关联ID
		/// </summary>
		[Column("deviceid"), NotNull             ] public int Deviceid { get; set; } // int(11)

		#region Associations

		/// <summary>
		/// device_ud_FK
		/// </summary>
		[Association(ThisKey="Deviceid", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="device_ud_FK", BackReferenceName="UdFks")]
		public Device Device { get; set; }

		/// <summary>
		/// user_ud_FK
		/// </summary>
		[Association(ThisKey="Userid", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="user_ud_FK", BackReferenceName="UdFks")]
		public User User { get; set; }

		#endregion
	}

	[Table("whitelist")]
	public partial class Whitelist
	{
		/// <summary>
		/// 白名单ID
		/// </summary>
		[Column("id"),         PrimaryKey, Identity] public int      Id         { get; set; } // int(11)
		/// <summary>
		/// 飞机SN码（唯一标识码）
		/// </summary>
		[Column("sn"),         NotNull             ] public string   Sn         { get; set; } // varchar(255)
		[Column("department"), NotNull             ] public string   Department { get; set; } // varchar(255)
		[Column("startime"),   NotNull             ] public DateTime Startime   { get; set; } // datetime
		[Column("endtime"),    NotNull             ] public DateTime Endtime    { get; set; } // datetime
		/// <summary>
		/// 创建时间
		/// </summary>
		[Column("createtime"), NotNull             ] public DateTime Createtime { get; set; } // datetime
		/// <summary>
		/// 更新时间
		/// </summary>
		[Column("updatetime"), NotNull             ] public DateTime Updatetime { get; set; } // datetime
	}

	[Table("zone")]
	public partial class Zone
	{
		/// <summary>
		/// 预警区唯一ID
		/// </summary>
		[Column("id"),                     PrimaryKey,  Identity] public int      Id                     { get; set; } // int(11)
		/// <summary>
		/// 预警区名称
		/// </summary>
		[Column("name"),                   NotNull              ] public string   Name                   { get; set; } // varchar(255)
		/// <summary>
		/// 预警区gis绘制点集合
		/// </summary>
		[Column("zonePoints"),             NotNull              ] public string   ZonePoints             { get; set; } // varchar(5000)
		/// <summary>
		/// gps坐标集合
		/// </summary>
		[Column("zonePointsPosition"),        Nullable          ] public string   ZonePointsPosition     { get; set; } // varchar(5000)
		/// <summary>
		/// 绘制填充色
		/// </summary>
		[Column("fullColor"),              NotNull              ] public string   FullColor              { get; set; } // varchar(255)
		/// <summary>
		/// 绘制线条色
		/// </summary>
		[Column("lineColor"),              NotNull              ] public string   LineColor              { get; set; } // varchar(255)
		/// <summary>
		/// 绘制线边框
		/// </summary>
		[Column("lineThickness"),          NotNull              ] public double   LineThickness          { get; set; } // double
		/// <summary>
		/// 外接圆半径
		/// </summary>
		[Column("circumcircleR"),          NotNull              ] public double   CircumcircleR          { get; set; } // double
		/// <summary>
		/// 外接圆辐射半径
		/// </summary>
		[Column("circumcircleRadiationR"), NotNull              ] public double   CircumcircleRadiationR { get; set; } // double
		/// <summary>
		/// 外接圆圆心纬度
		/// </summary>
		[Column("circumcircleLat"),        NotNull              ] public double   CircumcircleLat        { get; set; } // double
		/// <summary>
		/// 外接圆圆心经度
		/// </summary>
		[Column("circumcircleLng"),        NotNull              ] public double   CircumcircleLng        { get; set; } // double
		/// <summary>
		/// 预警区威胁判定常量参数B
		/// </summary>
		[Column("bDistance"),              NotNull              ] public double   BDistance              { get; set; } // double
		/// <summary>
		/// 预警区威胁判定常量参数A
		/// </summary>
		[Column("aDistance"),              NotNull              ] public double   ADistance              { get; set; } // double
		/// <summary>
		/// 预警区威胁判定常量参数normal
		/// </summary>
		[Column("normalDistance"),         NotNull              ] public double   NormalDistance         { get; set; } // double
		/// <summary>
		/// 预警区创建时间
		/// </summary>
		[Column("createtime"),             NotNull              ] public DateTime Createtime             { get; set; } // datetime
		/// <summary>
		/// 预警区更新时间
		/// </summary>
		[Column("updatetime"),             NotNull              ] public DateTime Updatetime             { get; set; } // datetime

		#region Associations

		/// <summary>
		/// zone_dz_FK_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="ZoneId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<DeviceZone> DzFks { get; set; }

		#endregion
	}

	public static partial class TableExtensions
	{
		public static Device Find(this ITable<Device> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static DeviceZone Find(this ITable<DeviceZone> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static DicDeviceCategory Find(this ITable<DicDeviceCategory> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static DicMapConfig Find(this ITable<DicMapConfig> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static DicSysConfig Find(this ITable<DicSysConfig> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Target Find(this ITable<Target> table, int Id, string TgId)
		{
			return table.FirstOrDefault(t =>
				t.Id   == Id &&
				t.TgId == TgId);
		}

		public static TargetTurn Find(this ITable<TargetTurn> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Token Find(this ITable<Token> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Track Find(this ITable<Track> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Uavmodel Find(this ITable<Uavmodel> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static User Find(this ITable<User> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static UserCmsPersonalization Find(this ITable<UserCmsPersonalization> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static UserDevice Find(this ITable<UserDevice> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Whitelist Find(this ITable<Whitelist> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Zone Find(this ITable<Zone> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}
	}
}

#pragma warning restore 1591
